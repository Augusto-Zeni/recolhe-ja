// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  passwordHash  String   @map("password_hash")
  createdAt     DateTime @default(now()) @map("created_at")
  googleId      String?  @map("google_id")
  
  items         Item[]
  participants  EventParticipant[]
  
  @@map("users")
}

model Item {
  id                 Int      @id @default(autoincrement())
  userId             Int?     @map("user_id")
  imageUrl           String   @map("image_url")
  predictedCategory  String   @map("predicted_category")
  confidence         Float
  createdAt          DateTime @default(now()) @map("created_at")
  
  user               User?    @relation(fields: [userId], references: [id])
  
  @@map("items")
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  lat         Float
  lon         Float
  startAt     DateTime @map("start_at")
  endAt       DateTime @map("end_at")
  createdBy   String   @map("created_by")
  createdAt   DateTime @default(now()) @map("created_at")
  
  participants EventParticipant[]
  categories   EventCategory[]
  
  @@map("events")
}

model Category {
  id                          Int      @id @default(autoincrement())
  name                        String   @unique
  
  eventCategories             EventCategory[]
  collectionPointCategories   CollectionPointCategory[]
  
  @@map("category")
}

model CollectionPoint {
  id           Int      @id @default(autoincrement())
  name         String?
  lat          Float?
  lon          Float?
  address      String?
  contact      String?
  openingHours String?  @map("opening_hours")
  createdBy    String?  @map("created_by")
  
  categories   CollectionPointCategory[]
  
  @@map("collection_points")
}

model EventParticipant {
  id       Int     @id @default(autoincrement())
  userId   Int?    @map("user_id")
  eventId  Int?    @map("event_id")
  status   String?
  
  user     User?   @relation(fields: [userId], references: [id])
  event    Event?  @relation(fields: [eventId], references: [id])
  
  @@map("event_participants")
}

model EventCategory {
  id         Int  @id @default(autoincrement())
  categoryId Int  @map("category_id")
  eventId    Int? @map("event_id")
  
  category   Category @relation(fields: [categoryId], references: [id])
  event      Event?   @relation(fields: [eventId], references: [id])
  
  @@map("event_categories")
}

model CollectionPointCategory {
  id                 Int  @id @default(autoincrement())
  categoryId         Int? @map("category_id")
  collectionPointId  Int? @map("collection_point_id")
  
  category           Category?         @relation(fields: [categoryId], references: [id])
  collectionPoint    CollectionPoint?  @relation(fields: [collectionPointId], references: [id])
  
  @@map("collection_point_categories")
}